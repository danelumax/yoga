<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 注意：使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址 -->
<mapper namespace="com.Mybatis.Mapper.OrdersMapperCustom">

	<resultMap type="com.pojo.Orders" id="OrdersUserResultMap">
		<!-- 配置映射的订单信息 -->
		<!-- id：指定查询列中的唯 一标识，订单信息的中的唯 一标识，如果有多个列组成唯一标识，配置多个id
			column：订单信息的唯 一标识 列 (orders表中)
			property：订单信息的唯 一标识 列所映射到Orders中哪个属性 (orders pojo)
		  -->
		<!-- column: 一次sql查询的结果， property： Orders中的属性 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		
		<!-- 配置映射的关联的用户信息 -->
		<!-- association：用于映射关联查询单个对象的信息
		property：要将关联查询的用户信息映射到Orders中哪个属性(orders.user in pojo)
		 -->
		<association property="user"  javaType="com.pojo.User">
			<!-- id：关联查询用户的唯 一标识
			column：指定唯 一标识用户信息的列 (在orders表中)
			property：映射到user的哪个属性 （user.id in pojo）
			 -->
			<!-- column: 一次sql查询的结果， property： User中的属性 -->
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
		
		</association>
	</resultMap>

	<!-- 查询所有订单信息 -->
	<select id="findOrdersUser" resultType="com.pojo.OrdersCustom">
		SELECT
			orders.*,
			user.username,
			user.address,
			user.sex
		FROM
			orders,	user
		WHERE orders.user_id = user.id 
	</select>
	
	<!-- 查询订单关联查询用户信息，使用resultmap -->
	<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
		SELECT
			orders.*,
			user.username,
			user.sex,
			user.address
		FROM
			orders,
			user
		WHERE orders.user_id = user.id
	</select>

</mapper>


