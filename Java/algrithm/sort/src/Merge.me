#归并排序
归并排序原理是将一个数组，按照一个长度分割为若干个单元，然后相邻的两两单元，按照大小关系，进行排序，即两个单元按照顺序进行合并。当所有相邻的两两单元都归并好了，
那么把整个数组存放到一个辅助内存中，将单元长度翻倍，再一次分割数组，然后相邻的两两单元再进行归并，再存入原来的内存中，直至单元长度大于数组长度为止。

首先要申请一个辅助内存，设定初始单元长度（默认1），设定复制开关，0就是将原内存复制到辅助内存，1就是将辅助内存复制到原内存。
其次，就是将整个数组按照单元长度进行分割。首先，按照单位长度分割，查看时候有两个单元，如果有的话，就能进行合并了，如果没有，直接放到辅助内存中。
然后要计算出第一个单元的起点，终点，第二个单元的终点，或者说是合并后单元的终点。
如果计算得出的第二个单元的终点大于总长度了，说明第二个单元实际长度一定小于规定长度，所以需要将第二个单元的终点设置为数组最后一个的位置。
再分割完后，将相邻的单元分别取出，都从头开始，比较大小。将排序后的单元存放到辅助内存中。
单元都是两个两个取的，当前一对单元排序往后，整个数组还剩一个单元时，无法组成一队，那么就把它先放到辅助内存中，等待下一次排序。
每一次按照某个长度将整个数组合并处理后，必须将长度翻倍。
最后需要根据复制开关的值，判定是否需要将辅助内存数据放到原内存中。
